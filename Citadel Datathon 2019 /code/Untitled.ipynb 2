{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import vincent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'NoneType' object is not iterable",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-22-197af56dcc89>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mstate_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'US_Unemployment_Oct2012.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mvis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvincent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m800\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;31m# vis.tabular_data(state_data, columns=['State', 'Unemployment'])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# vis.geo_data(bind_data='data.id', reset=True, states=state_geo)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# vis.update_map(scale=1000, projection='albersUsa')\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m//anaconda/envs/deeplearning/lib/python2.7/site-packages/vincent-0.4.4-py2.7.egg/vincent/charts.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, geo_data, projection, center, translate, scale, rotate, data_bind, data_key, map_key, brew, *args, **kwargs)\u001b[0m\n\u001b[1;32m    409\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    410\u001b[0m         \u001b[0;31m# Add Data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 411\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mdat\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mgeo_data\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    412\u001b[0m             \u001b[0;31m# Data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    413\u001b[0m             \u001b[0mtransforms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: 'NoneType' object is not iterable"
     ]
    }
   ],
   "source": [
    "state_data = pd.read_csv('US_Unemployment_Oct2012.csv')\n",
    "vis = vincent.Map(width=1000, height=800)\n",
    "# vis.tabular_data(state_data, columns=['State', 'Unemployment'])\n",
    "# vis.geo_data(bind_data='data.id', reset=True, states=state_geo)\n",
    "# vis.update_map(scale=1000, projection='albersUsa')\n",
    "# vis + (['#c9cedb', '#0b0d11'], 'scales', 0, 'range')\n",
    "# vis.to_json(path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'NoneType' object is not iterable",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-23-a9b2414e84d4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvincent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m800\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m//anaconda/envs/deeplearning/lib/python2.7/site-packages/vincent-0.4.4-py2.7.egg/vincent/charts.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, geo_data, projection, center, translate, scale, rotate, data_bind, data_key, map_key, brew, *args, **kwargs)\u001b[0m\n\u001b[1;32m    409\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    410\u001b[0m         \u001b[0;31m# Add Data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 411\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mdat\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mgeo_data\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    412\u001b[0m             \u001b[0;31m# Data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    413\u001b[0m             \u001b[0mtransforms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: 'NoneType' object is not iterable"
     ]
    }
   ],
   "source": [
    "vis = vincent.Map(width=1000, height=800)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "import altair as alt\n",
    "from vega_datasets import data\n",
    "alt.renderers.enable('notebook')\n",
    "counties = alt.topo_feature(data.us_10m.url, 'counties')\n",
    "source = data.unemployment.url\n",
    "\n",
    "alt.Chart(counties).mark_geoshape().encode(\n",
    "    color='rate:Q'\n",
    ").transform_lookup(\n",
    "    lookup='id',\n",
    "    from_=alt.LookupData(source, 'id', ['rate'])\n",
    ").project(\n",
    "    type='albersUsa'\n",
    ").properties(\n",
    "    width=500,\n",
    "    height=300\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "var spec = {\"datasets\": {\"data-17dc30e03f36b127e36a2b5b7228e72b\": [{\"State\": \"AL\", \"Unemployment\": 7.1}, {\"State\": \"AK\", \"Unemployment\": 6.8}, {\"State\": \"AZ\", \"Unemployment\": 8.1}, {\"State\": \"AR\", \"Unemployment\": 7.2}, {\"State\": \"CA\", \"Unemployment\": 10.1}, {\"State\": \"CO\", \"Unemployment\": 7.7}, {\"State\": \"CT\", \"Unemployment\": 8.4}, {\"State\": \"DE\", \"Unemployment\": 7.1}, {\"State\": \"FL\", \"Unemployment\": 8.2}, {\"State\": \"GA\", \"Unemployment\": 8.8}, {\"State\": \"HI\", \"Unemployment\": 5.4}, {\"State\": \"ID\", \"Unemployment\": 6.6}, {\"State\": \"IL\", \"Unemployment\": 8.8}, {\"State\": \"IN\", \"Unemployment\": 8.4}, {\"State\": \"IA\", \"Unemployment\": 5.1}, {\"State\": \"KS\", \"Unemployment\": 5.6}, {\"State\": \"KY\", \"Unemployment\": 8.1}, {\"State\": \"LA\", \"Unemployment\": 5.9}, {\"State\": \"ME\", \"Unemployment\": 7.2}, {\"State\": \"MD\", \"Unemployment\": 6.8}, {\"State\": \"MA\", \"Unemployment\": 6.7}, {\"State\": \"MI\", \"Unemployment\": 9.1}, {\"State\": \"MN\", \"Unemployment\": 5.6}, {\"State\": \"MS\", \"Unemployment\": 9.1}, {\"State\": \"MO\", \"Unemployment\": 6.7}, {\"State\": \"MT\", \"Unemployment\": 5.8}, {\"State\": \"NE\", \"Unemployment\": 3.9}, {\"State\": \"NV\", \"Unemployment\": 10.3}, {\"State\": \"NH\", \"Unemployment\": 5.7}, {\"State\": \"NJ\", \"Unemployment\": 9.6}, {\"State\": \"NM\", \"Unemployment\": 6.8}, {\"State\": \"NY\", \"Unemployment\": 8.4}, {\"State\": \"NC\", \"Unemployment\": 9.4}, {\"State\": \"ND\", \"Unemployment\": 3.2}, {\"State\": \"OH\", \"Unemployment\": 6.9}, {\"State\": \"OK\", \"Unemployment\": 5.2}, {\"State\": \"OR\", \"Unemployment\": 8.5}, {\"State\": \"PA\", \"Unemployment\": 8.0}, {\"State\": \"RI\", \"Unemployment\": 10.1}, {\"State\": \"SC\", \"Unemployment\": 8.8}, {\"State\": \"SD\", \"Unemployment\": 4.4}, {\"State\": \"TN\", \"Unemployment\": 7.8}, {\"State\": \"TX\", \"Unemployment\": 6.4}, {\"State\": \"UT\", \"Unemployment\": 5.5}, {\"State\": \"VT\", \"Unemployment\": 5.0}, {\"State\": \"VA\", \"Unemployment\": 5.8}, {\"State\": \"WA\", \"Unemployment\": 7.8}, {\"State\": \"WV\", \"Unemployment\": 7.5}, {\"State\": \"WI\", \"Unemployment\": 6.8}, {\"State\": \"WY\", \"Unemployment\": 5.1}]}, \"projection\": {\"type\": \"albersUsa\"}, \"encoding\": {\"color\": {\"field\": \"Unemployment\", \"type\": \"quantitative\"}}, \"data\": {\"name\": \"data-17dc30e03f36b127e36a2b5b7228e72b\"}, \"transform\": [{\"from\": {\"fields\": [\"Unemployment\"], \"data\": {\"name\": \"data-17dc30e03f36b127e36a2b5b7228e72b\"}, \"key\": \"state_data\"}, \"lookup\": \"State\"}], \"height\": 300, \"width\": 500, \"$schema\": \"https://vega.github.io/schema/vega-lite/v2.6.0.json\", \"mark\": \"geoshape\", \"config\": {\"view\": {\"width\": 400, \"height\": 300}}};\n",
       "var opt = {};\n",
       "var type = \"vega-lite\";\n",
       "var id = \"0beda20f-232d-4897-a5f6-1ddb964b034d\";\n",
       "\n",
       "var output_area = this;\n",
       "\n",
       "require([\"nbextensions/jupyter-vega/index\"], function(vega) {\n",
       "  var target = document.createElement(\"div\");\n",
       "  target.id = id;\n",
       "  target.className = \"vega-embed\";\n",
       "\n",
       "  var style = document.createElement(\"style\");\n",
       "  style.textContent = [\n",
       "    \".vega-embed .error p {\",\n",
       "    \"  color: firebrick;\",\n",
       "    \"  font-size: 14px;\",\n",
       "    \"}\",\n",
       "  ].join(\"\\\\n\");\n",
       "\n",
       "  // element is a jQuery wrapped DOM element inside the output area\n",
       "  // see http://ipython.readthedocs.io/en/stable/api/generated/\\\n",
       "  // IPython.display.html#IPython.display.Javascript.__init__\n",
       "  element[0].appendChild(target);\n",
       "  element[0].appendChild(style);\n",
       "\n",
       "  vega.render(\"#\" + id, spec, type, opt, output_area);\n",
       "}, function (err) {\n",
       "  if (err.requireType !== \"scripterror\") {\n",
       "    throw(err);\n",
       "  }\n",
       "});\n"
      ],
      "text/plain": [
       "<vega.vegalite.VegaLite at 0x1081a3910>"
      ]
     },
     "metadata": {
      "jupyter-vega": "#0beda20f-232d-4897-a5f6-1ddb964b034d"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": []
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import altair as alt\n",
    "from vega_datasets import data\n",
    "alt.renderers.enable('notebook')\n",
    "state_data = pd.read_csv('US_Unemployment_Oct2012.csv')\n",
    "alt.Chart(state_data).mark_geoshape().encode(\n",
    "    color='Unemployment:Q'\n",
    ").transform_lookup(\n",
    "    lookup='State',\n",
    "    from_=alt.LookupData(state_data, 'state_data', ['Unemployment'])\n",
    ").project(\n",
    "    type='albersUsa'\n",
    ").properties(\n",
    "    width=500,\n",
    "    height=300\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "var spec = {\"datasets\": {\"data-a264acbd6e539a8b3afc0cb5f240fb57\": [{\"sepalLength\": 5.1, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.5}, {\"sepalLength\": 4.9, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.0}, {\"sepalLength\": 4.7, \"petalWidth\": 0.2, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 3.2}, {\"sepalLength\": 4.6, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.0, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.6}, {\"sepalLength\": 5.4, \"petalWidth\": 0.4, \"petalLength\": 1.7000000000000002, \"species\": \"setosa\", \"sepalWidth\": 3.9}, {\"sepalLength\": 4.6, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.0, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 4.4, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 2.9}, {\"sepalLength\": 4.9, \"petalWidth\": 0.1, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.4, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.7}, {\"sepalLength\": 4.8, \"petalWidth\": 0.2, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 4.8, \"petalWidth\": 0.1, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.0}, {\"sepalLength\": 4.3, \"petalWidth\": 0.1, \"petalLength\": 1.1, \"species\": \"setosa\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.8, \"petalWidth\": 0.2, \"petalLength\": 1.2, \"species\": \"setosa\", \"sepalWidth\": 4.0}, {\"sepalLength\": 5.7, \"petalWidth\": 0.4, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 4.4}, {\"sepalLength\": 5.4, \"petalWidth\": 0.4, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 3.9}, {\"sepalLength\": 5.1, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.5}, {\"sepalLength\": 5.7, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.7000000000000002, \"species\": \"setosa\", \"sepalWidth\": 3.8}, {\"sepalLength\": 5.1, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.8}, {\"sepalLength\": 5.4, \"petalWidth\": 0.2, \"petalLength\": 1.7000000000000002, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.1, \"petalWidth\": 0.4, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.7}, {\"sepalLength\": 4.6, \"petalWidth\": 0.2, \"petalLength\": 1.0, \"species\": \"setosa\", \"sepalWidth\": 3.6}, {\"sepalLength\": 5.1, \"petalWidth\": 0.5, \"petalLength\": 1.7000000000000002, \"species\": \"setosa\", \"sepalWidth\": 3.3}, {\"sepalLength\": 4.8, \"petalWidth\": 0.2, \"petalLength\": 1.9, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.0, \"petalWidth\": 0.2, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.0, \"petalWidth\": 0.4, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.2, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.5}, {\"sepalLength\": 5.2, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 4.7, \"petalWidth\": 0.2, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.2}, {\"sepalLength\": 4.8, \"petalWidth\": 0.2, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.4, \"petalWidth\": 0.4, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.2, \"petalWidth\": 0.1, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 4.1}, {\"sepalLength\": 5.5, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 4.2}, {\"sepalLength\": 4.9, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.0, \"petalWidth\": 0.2, \"petalLength\": 1.2, \"species\": \"setosa\", \"sepalWidth\": 3.2}, {\"sepalLength\": 5.5, \"petalWidth\": 0.2, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 3.5}, {\"sepalLength\": 4.9, \"petalWidth\": 0.1, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.6}, {\"sepalLength\": 4.4, \"petalWidth\": 0.2, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.1, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.0, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 3.5}, {\"sepalLength\": 4.5, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 2.3}, {\"sepalLength\": 4.4, \"petalWidth\": 0.2, \"petalLength\": 1.3, \"species\": \"setosa\", \"sepalWidth\": 3.2}, {\"sepalLength\": 5.0, \"petalWidth\": 0.6000000000000001, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.5}, {\"sepalLength\": 5.1, \"petalWidth\": 0.4, \"petalLength\": 1.9, \"species\": \"setosa\", \"sepalWidth\": 3.8}, {\"sepalLength\": 4.8, \"petalWidth\": 0.30000000000000004, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.1, \"petalWidth\": 0.2, \"petalLength\": 1.6, \"species\": \"setosa\", \"sepalWidth\": 3.8}, {\"sepalLength\": 4.6, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.2}, {\"sepalLength\": 5.3, \"petalWidth\": 0.2, \"petalLength\": 1.5, \"species\": \"setosa\", \"sepalWidth\": 3.7}, {\"sepalLength\": 5.0, \"petalWidth\": 0.2, \"petalLength\": 1.4, \"species\": \"setosa\", \"sepalWidth\": 3.3}, {\"sepalLength\": 7.0, \"petalWidth\": 1.4, \"petalLength\": 4.7, \"species\": \"versicolor\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.4, \"petalWidth\": 1.5, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.9, \"petalWidth\": 1.5, \"petalLength\": 4.9, \"species\": \"versicolor\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.5, \"petalWidth\": 1.3, \"petalLength\": 4.0, \"species\": \"versicolor\", \"sepalWidth\": 2.3}, {\"sepalLength\": 6.5, \"petalWidth\": 1.5, \"petalLength\": 4.6, \"species\": \"versicolor\", \"sepalWidth\": 2.8}, {\"sepalLength\": 5.7, \"petalWidth\": 1.3, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.3, \"petalWidth\": 1.6, \"petalLength\": 4.7, \"species\": \"versicolor\", \"sepalWidth\": 3.3}, {\"sepalLength\": 4.9, \"petalWidth\": 1.0, \"petalLength\": 3.3, \"species\": \"versicolor\", \"sepalWidth\": 2.4}, {\"sepalLength\": 6.6, \"petalWidth\": 1.3, \"petalLength\": 4.6, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 5.2, \"petalWidth\": 1.4, \"petalLength\": 3.9, \"species\": \"versicolor\", \"sepalWidth\": 2.7}, {\"sepalLength\": 5.0, \"petalWidth\": 1.0, \"petalLength\": 3.5, \"species\": \"versicolor\", \"sepalWidth\": 2.0}, {\"sepalLength\": 5.9, \"petalWidth\": 1.5, \"petalLength\": 4.2, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.0, \"petalWidth\": 1.0, \"petalLength\": 4.0, \"species\": \"versicolor\", \"sepalWidth\": 2.2}, {\"sepalLength\": 6.1, \"petalWidth\": 1.4, \"petalLength\": 4.7, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 5.6, \"petalWidth\": 1.3, \"petalLength\": 3.6, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 6.7, \"petalWidth\": 1.4, \"petalLength\": 4.4, \"species\": \"versicolor\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.6, \"petalWidth\": 1.5, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.8, \"petalWidth\": 1.0, \"petalLength\": 4.1, \"species\": \"versicolor\", \"sepalWidth\": 2.7}, {\"sepalLength\": 6.2, \"petalWidth\": 1.5, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 2.2}, {\"sepalLength\": 5.6, \"petalWidth\": 1.1, \"petalLength\": 3.9, \"species\": \"versicolor\", \"sepalWidth\": 2.5}, {\"sepalLength\": 5.9, \"petalWidth\": 1.8, \"petalLength\": 4.8, \"species\": \"versicolor\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.1, \"petalWidth\": 1.3, \"petalLength\": 4.0, \"species\": \"versicolor\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.3, \"petalWidth\": 1.5, \"petalLength\": 4.9, \"species\": \"versicolor\", \"sepalWidth\": 2.5}, {\"sepalLength\": 6.1, \"petalWidth\": 1.2, \"petalLength\": 4.7, \"species\": \"versicolor\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.4, \"petalWidth\": 1.3, \"petalLength\": 4.3, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 6.6, \"petalWidth\": 1.4, \"petalLength\": 4.4, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.8, \"petalWidth\": 1.4, \"petalLength\": 4.8, \"species\": \"versicolor\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.7, \"petalWidth\": 1.7000000000000002, \"petalLength\": 5.0, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.0, \"petalWidth\": 1.5, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 5.7, \"petalWidth\": 1.0, \"petalLength\": 3.5, \"species\": \"versicolor\", \"sepalWidth\": 2.6}, {\"sepalLength\": 5.5, \"petalWidth\": 1.1, \"petalLength\": 3.8, \"species\": \"versicolor\", \"sepalWidth\": 2.4}, {\"sepalLength\": 5.5, \"petalWidth\": 1.0, \"petalLength\": 3.7, \"species\": \"versicolor\", \"sepalWidth\": 2.4}, {\"sepalLength\": 5.8, \"petalWidth\": 1.2, \"petalLength\": 3.9, \"species\": \"versicolor\", \"sepalWidth\": 2.7}, {\"sepalLength\": 6.0, \"petalWidth\": 1.6, \"petalLength\": 5.1, \"species\": \"versicolor\", \"sepalWidth\": 2.7}, {\"sepalLength\": 5.4, \"petalWidth\": 1.5, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.0, \"petalWidth\": 1.6, \"petalLength\": 4.5, \"species\": \"versicolor\", \"sepalWidth\": 3.4}, {\"sepalLength\": 6.7, \"petalWidth\": 1.5, \"petalLength\": 4.7, \"species\": \"versicolor\", \"sepalWidth\": 3.1}, {\"sepalLength\": 6.3, \"petalWidth\": 1.3, \"petalLength\": 4.4, \"species\": \"versicolor\", \"sepalWidth\": 2.3}, {\"sepalLength\": 5.6, \"petalWidth\": 1.3, \"petalLength\": 4.1, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.5, \"petalWidth\": 1.3, \"petalLength\": 4.0, \"species\": \"versicolor\", \"sepalWidth\": 2.5}, {\"sepalLength\": 5.5, \"petalWidth\": 1.2, \"petalLength\": 4.4, \"species\": \"versicolor\", \"sepalWidth\": 2.6}, {\"sepalLength\": 6.1, \"petalWidth\": 1.4, \"petalLength\": 4.6, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.8, \"petalWidth\": 1.2, \"petalLength\": 4.0, \"species\": \"versicolor\", \"sepalWidth\": 2.6}, {\"sepalLength\": 5.0, \"petalWidth\": 1.0, \"petalLength\": 3.3, \"species\": \"versicolor\", \"sepalWidth\": 2.3}, {\"sepalLength\": 5.6, \"petalWidth\": 1.3, \"petalLength\": 4.2, \"species\": \"versicolor\", \"sepalWidth\": 2.7}, {\"sepalLength\": 5.7, \"petalWidth\": 1.2, \"petalLength\": 4.2, \"species\": \"versicolor\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.7, \"petalWidth\": 1.3, \"petalLength\": 4.2, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 6.2, \"petalWidth\": 1.3, \"petalLength\": 4.3, \"species\": \"versicolor\", \"sepalWidth\": 2.9}, {\"sepalLength\": 5.1, \"petalWidth\": 1.1, \"petalLength\": 3.0, \"species\": \"versicolor\", \"sepalWidth\": 2.5}, {\"sepalLength\": 5.7, \"petalWidth\": 1.3, \"petalLength\": 4.1, \"species\": \"versicolor\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.3, \"petalWidth\": 2.5, \"petalLength\": 6.0, \"species\": \"virginica\", \"sepalWidth\": 3.3}, {\"sepalLength\": 5.8, \"petalWidth\": 1.9, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 2.7}, {\"sepalLength\": 7.1, \"petalWidth\": 2.1, \"petalLength\": 5.9, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.3, \"petalWidth\": 1.8, \"petalLength\": 5.6, \"species\": \"virginica\", \"sepalWidth\": 2.9}, {\"sepalLength\": 6.5, \"petalWidth\": 2.2, \"petalLength\": 5.8, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 7.6, \"petalWidth\": 2.1, \"petalLength\": 6.6, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 4.9, \"petalWidth\": 1.7000000000000002, \"petalLength\": 4.5, \"species\": \"virginica\", \"sepalWidth\": 2.5}, {\"sepalLength\": 7.3, \"petalWidth\": 1.8, \"petalLength\": 6.3, \"species\": \"virginica\", \"sepalWidth\": 2.9}, {\"sepalLength\": 6.7, \"petalWidth\": 1.8, \"petalLength\": 5.8, \"species\": \"virginica\", \"sepalWidth\": 2.5}, {\"sepalLength\": 7.2, \"petalWidth\": 2.5, \"petalLength\": 6.1, \"species\": \"virginica\", \"sepalWidth\": 3.6}, {\"sepalLength\": 6.5, \"petalWidth\": 2.0, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.4, \"petalWidth\": 1.9, \"petalLength\": 5.3, \"species\": \"virginica\", \"sepalWidth\": 2.7}, {\"sepalLength\": 6.8, \"petalWidth\": 2.1, \"petalLength\": 5.5, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 5.7, \"petalWidth\": 2.0, \"petalLength\": 5.0, \"species\": \"virginica\", \"sepalWidth\": 2.5}, {\"sepalLength\": 5.8, \"petalWidth\": 2.4, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.4, \"petalWidth\": 2.3, \"petalLength\": 5.3, \"species\": \"virginica\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.5, \"petalWidth\": 1.8, \"petalLength\": 5.5, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 7.7, \"petalWidth\": 2.2, \"petalLength\": 6.7, \"species\": \"virginica\", \"sepalWidth\": 3.8}, {\"sepalLength\": 7.7, \"petalWidth\": 2.3, \"petalLength\": 6.9, \"species\": \"virginica\", \"sepalWidth\": 2.6}, {\"sepalLength\": 6.0, \"petalWidth\": 1.5, \"petalLength\": 5.0, \"species\": \"virginica\", \"sepalWidth\": 2.2}, {\"sepalLength\": 6.9, \"petalWidth\": 2.3, \"petalLength\": 5.7, \"species\": \"virginica\", \"sepalWidth\": 3.2}, {\"sepalLength\": 5.6, \"petalWidth\": 2.0, \"petalLength\": 4.9, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 7.7, \"petalWidth\": 2.0, \"petalLength\": 6.7, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.3, \"petalWidth\": 1.8, \"petalLength\": 4.9, \"species\": \"virginica\", \"sepalWidth\": 2.7}, {\"sepalLength\": 6.7, \"petalWidth\": 2.1, \"petalLength\": 5.7, \"species\": \"virginica\", \"sepalWidth\": 3.3}, {\"sepalLength\": 7.2, \"petalWidth\": 1.8, \"petalLength\": 6.0, \"species\": \"virginica\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.2, \"petalWidth\": 1.8, \"petalLength\": 4.8, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.1, \"petalWidth\": 1.8, \"petalLength\": 4.9, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.4, \"petalWidth\": 2.1, \"petalLength\": 5.6, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 7.2, \"petalWidth\": 1.6, \"petalLength\": 5.8, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 7.4, \"petalWidth\": 1.9, \"petalLength\": 6.1, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 7.9, \"petalWidth\": 2.0, \"petalLength\": 6.4, \"species\": \"virginica\", \"sepalWidth\": 3.8}, {\"sepalLength\": 6.4, \"petalWidth\": 2.2, \"petalLength\": 5.6, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.3, \"petalWidth\": 1.5, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 2.8}, {\"sepalLength\": 6.1, \"petalWidth\": 1.4, \"petalLength\": 5.6, \"species\": \"virginica\", \"sepalWidth\": 2.6}, {\"sepalLength\": 7.7, \"petalWidth\": 2.3, \"petalLength\": 6.1, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.3, \"petalWidth\": 2.4, \"petalLength\": 5.6, \"species\": \"virginica\", \"sepalWidth\": 3.4}, {\"sepalLength\": 6.4, \"petalWidth\": 1.8, \"petalLength\": 5.5, \"species\": \"virginica\", \"sepalWidth\": 3.1}, {\"sepalLength\": 6.0, \"petalWidth\": 1.8, \"petalLength\": 4.8, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.9, \"petalWidth\": 2.1, \"petalLength\": 5.4, \"species\": \"virginica\", \"sepalWidth\": 3.1}, {\"sepalLength\": 6.7, \"petalWidth\": 2.4, \"petalLength\": 5.6, \"species\": \"virginica\", \"sepalWidth\": 3.1}, {\"sepalLength\": 6.9, \"petalWidth\": 2.3, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 3.1}, {\"sepalLength\": 5.8, \"petalWidth\": 1.9, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 2.7}, {\"sepalLength\": 6.8, \"petalWidth\": 2.3, \"petalLength\": 5.9, \"species\": \"virginica\", \"sepalWidth\": 3.2}, {\"sepalLength\": 6.7, \"petalWidth\": 2.5, \"petalLength\": 5.7, \"species\": \"virginica\", \"sepalWidth\": 3.3}, {\"sepalLength\": 6.7, \"petalWidth\": 2.3, \"petalLength\": 5.2, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.3, \"petalWidth\": 1.9, \"petalLength\": 5.0, \"species\": \"virginica\", \"sepalWidth\": 2.5}, {\"sepalLength\": 6.5, \"petalWidth\": 2.0, \"petalLength\": 5.2, \"species\": \"virginica\", \"sepalWidth\": 3.0}, {\"sepalLength\": 6.2, \"petalWidth\": 2.3, \"petalLength\": 5.4, \"species\": \"virginica\", \"sepalWidth\": 3.4}, {\"sepalLength\": 5.9, \"petalWidth\": 1.8, \"petalLength\": 5.1, \"species\": \"virginica\", \"sepalWidth\": 3.0}]}, \"encoding\": {\"color\": {\"field\": \"species\", \"type\": \"nominal\"}, \"y\": {\"field\": \"petalWidth\", \"type\": \"quantitative\"}, \"x\": {\"field\": \"petalLength\", \"type\": \"quantitative\"}}, \"config\": {\"view\": {\"width\": 400, \"height\": 300}}, \"mark\": \"point\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v2.6.0.json\", \"data\": {\"name\": \"data-a264acbd6e539a8b3afc0cb5f240fb57\"}};\n",
       "var opt = {};\n",
       "var type = \"vega-lite\";\n",
       "var id = \"a2115a43-b116-41ef-9f0d-6a80f734b886\";\n",
       "\n",
       "var output_area = this;\n",
       "\n",
       "require([\"nbextensions/jupyter-vega/index\"], function(vega) {\n",
       "  var target = document.createElement(\"div\");\n",
       "  target.id = id;\n",
       "  target.className = \"vega-embed\";\n",
       "\n",
       "  var style = document.createElement(\"style\");\n",
       "  style.textContent = [\n",
       "    \".vega-embed .error p {\",\n",
       "    \"  color: firebrick;\",\n",
       "    \"  font-size: 14px;\",\n",
       "    \"}\",\n",
       "  ].join(\"\\\\n\");\n",
       "\n",
       "  // element is a jQuery wrapped DOM element inside the output area\n",
       "  // see http://ipython.readthedocs.io/en/stable/api/generated/\\\n",
       "  // IPython.display.html#IPython.display.Javascript.__init__\n",
       "  element[0].appendChild(target);\n",
       "  element[0].appendChild(style);\n",
       "\n",
       "  vega.render(\"#\" + id, spec, type, opt, output_area);\n",
       "}, function (err) {\n",
       "  if (err.requireType !== \"scripterror\") {\n",
       "    throw(err);\n",
       "  }\n",
       "});\n"
      ],
      "text/plain": [
       "<vega.vegalite.VegaLite at 0x1090049d0>"
      ]
     },
     "metadata": {
      "jupyter-vega": "#a2115a43-b116-41ef-9f0d-6a80f734b886"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": []
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": ""
     },
     "metadata": {
      "jupyter-vega": "#a2115a43-b116-41ef-9f0d-6a80f734b886"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import altair as alt\n",
    "from vega_datasets import data\n",
    "\n",
    "# for the notebook only (not for JupyterLab) run this command once per session\n",
    "alt.renderers.enable('notebook')\n",
    "\n",
    "iris = data.iris()\n",
    "\n",
    "alt.Chart(iris).mark_point().encode(\n",
    "    x='petalLength',\n",
    "    y='petalWidth',\n",
    "    color='species'\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "var spec = {\"$schema\": \"https://vega.github.io/schema/vega-lite/v2.6.0.json\", \"resolve\": {\"scale\": {\"color\": \"independent\"}}, \"config\": {\"view\": {\"width\": 400, \"height\": 300}}, \"spec\": {\"projection\": {\"type\": \"albersUsa\"}, \"encoding\": {\"color\": {\"field\": {\"repeat\": \"row\"}, \"type\": \"quantitative\"}}, \"transform\": [{\"from\": {\"fields\": [\"population\", \"engineers\", \"hurricanes\"], \"data\": {\"url\": \"https://vega.github.io/vega-datasets/data/population_engineers_hurricanes.csv\"}, \"key\": \"id\"}, \"lookup\": \"id\"}], \"height\": 300, \"width\": 500, \"mark\": \"geoshape\", \"data\": {\"url\": \"https://vega.github.io/vega-datasets/data/us-10m.json\", \"format\": {\"type\": \"topojson\", \"feature\": \"states\"}}}, \"repeat\": {\"row\": [\"population\", \"engineers\", \"hurricanes\"]}};\n",
       "var opt = {};\n",
       "var type = \"vega-lite\";\n",
       "var id = \"d0f2b677-b96f-47a1-8fe2-12a2f0fb74ec\";\n",
       "\n",
       "var output_area = this;\n",
       "\n",
       "require([\"nbextensions/jupyter-vega/index\"], function(vega) {\n",
       "  var target = document.createElement(\"div\");\n",
       "  target.id = id;\n",
       "  target.className = \"vega-embed\";\n",
       "\n",
       "  var style = document.createElement(\"style\");\n",
       "  style.textContent = [\n",
       "    \".vega-embed .error p {\",\n",
       "    \"  color: firebrick;\",\n",
       "    \"  font-size: 14px;\",\n",
       "    \"}\",\n",
       "  ].join(\"\\\\n\");\n",
       "\n",
       "  // element is a jQuery wrapped DOM element inside the output area\n",
       "  // see http://ipython.readthedocs.io/en/stable/api/generated/\\\n",
       "  // IPython.display.html#IPython.display.Javascript.__init__\n",
       "  element[0].appendChild(target);\n",
       "  element[0].appendChild(style);\n",
       "\n",
       "  vega.render(\"#\" + id, spec, type, opt, output_area);\n",
       "}, function (err) {\n",
       "  if (err.requireType !== \"scripterror\") {\n",
       "    throw(err);\n",
       "  }\n",
       "});\n"
      ],
      "text/plain": [
       "<vega.vegalite.VegaLite at 0x109053e90>"
      ]
     },
     "metadata": {
      "jupyter-vega": "#d0f2b677-b96f-47a1-8fe2-12a2f0fb74ec"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": []
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import altair as alt\n",
    "from vega_datasets import data\n",
    "\n",
    "states = alt.topo_feature(data.us_10m.url, 'states')\n",
    "source = data.population_engineers_hurricanes.url\n",
    "variable_list = ['population', 'engineers', 'hurricanes']\n",
    "\n",
    "alt.Chart(states).mark_geoshape().encode(\n",
    "    alt.Color(alt.repeat('row'), type='quantitative')\n",
    ").transform_lookup(\n",
    "    lookup='id',\n",
    "    from_=alt.LookupData(source, 'id', variable_list)\n",
    ").properties(\n",
    "    width=500,\n",
    "    height=300\n",
    ").project(\n",
    "    type='albersUsa'\n",
    ").repeat(\n",
    "    row=variable_list\n",
    ").resolve_scale(\n",
    "    color='independent'\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "u'https://vega.github.io/vega-datasets/data/unemployment.tsv'"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "source"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Unemployment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AL</td>\n",
       "      <td>7.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AK</td>\n",
       "      <td>6.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AZ</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AR</td>\n",
       "      <td>7.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CA</td>\n",
       "      <td>10.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CO</td>\n",
       "      <td>7.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>CT</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>DE</td>\n",
       "      <td>7.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>FL</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>GA</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>HI</td>\n",
       "      <td>5.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>ID</td>\n",
       "      <td>6.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>IL</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>IN</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>IA</td>\n",
       "      <td>5.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>KS</td>\n",
       "      <td>5.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>KY</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>LA</td>\n",
       "      <td>5.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>ME</td>\n",
       "      <td>7.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>MD</td>\n",
       "      <td>6.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>MA</td>\n",
       "      <td>6.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>MI</td>\n",
       "      <td>9.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>MN</td>\n",
       "      <td>5.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>MS</td>\n",
       "      <td>9.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>MO</td>\n",
       "      <td>6.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>MT</td>\n",
       "      <td>5.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>NE</td>\n",
       "      <td>3.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>NV</td>\n",
       "      <td>10.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>NH</td>\n",
       "      <td>5.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>NJ</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>NM</td>\n",
       "      <td>6.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>NY</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>NC</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>ND</td>\n",
       "      <td>3.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>OH</td>\n",
       "      <td>6.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>OK</td>\n",
       "      <td>5.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>OR</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>PA</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>RI</td>\n",
       "      <td>10.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>SC</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>SD</td>\n",
       "      <td>4.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>TN</td>\n",
       "      <td>7.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>TX</td>\n",
       "      <td>6.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>UT</td>\n",
       "      <td>5.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>VT</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>VA</td>\n",
       "      <td>5.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>WA</td>\n",
       "      <td>7.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>WV</td>\n",
       "      <td>7.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>WI</td>\n",
       "      <td>6.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>WY</td>\n",
       "      <td>5.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   State  Unemployment\n",
       "0     AL           7.1\n",
       "1     AK           6.8\n",
       "2     AZ           8.1\n",
       "3     AR           7.2\n",
       "4     CA          10.1\n",
       "5     CO           7.7\n",
       "6     CT           8.4\n",
       "7     DE           7.1\n",
       "8     FL           8.2\n",
       "9     GA           8.8\n",
       "10    HI           5.4\n",
       "11    ID           6.6\n",
       "12    IL           8.8\n",
       "13    IN           8.4\n",
       "14    IA           5.1\n",
       "15    KS           5.6\n",
       "16    KY           8.1\n",
       "17    LA           5.9\n",
       "18    ME           7.2\n",
       "19    MD           6.8\n",
       "20    MA           6.7\n",
       "21    MI           9.1\n",
       "22    MN           5.6\n",
       "23    MS           9.1\n",
       "24    MO           6.7\n",
       "25    MT           5.8\n",
       "26    NE           3.9\n",
       "27    NV          10.3\n",
       "28    NH           5.7\n",
       "29    NJ           9.6\n",
       "30    NM           6.8\n",
       "31    NY           8.4\n",
       "32    NC           9.4\n",
       "33    ND           3.2\n",
       "34    OH           6.9\n",
       "35    OK           5.2\n",
       "36    OR           8.5\n",
       "37    PA           8.0\n",
       "38    RI          10.1\n",
       "39    SC           8.8\n",
       "40    SD           4.4\n",
       "41    TN           7.8\n",
       "42    TX           6.4\n",
       "43    UT           5.5\n",
       "44    VT           5.0\n",
       "45    VA           5.8\n",
       "46    WA           7.8\n",
       "47    WV           7.5\n",
       "48    WI           6.8\n",
       "49    WY           5.1"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "deeplearning",
   "language": "python",
   "name": "deeplearning"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
